{"version":3,"sources":["components/Loader.js","components/Message.js","containers/LoadAndErrorContainer.js","Modal/ConfirmModal.js","screens/ProfileScreen.js"],"names":["Loader","className","animation","role","style","position","width","height","margin","display","Message","variant","children","useState","show","setShow","useEffect","onClose","dismissible","defaultProps","LoadAndErrorContainer","loading","title","setShowModal","activeBtn","filter","message","useSelector","state","successMsg","error","errorMsg","to","onClick","ConfirmModal","showModal","infoModal","executeInMenuItem","comment","setComment","body","handleClose","onHide","keyboard","Header","closeButton","Title","header","Body","Group","controlId","Control","as","rows","defaultValue","onChange","e","target","value","Footer","footer","ProfileScreen","history","location","name","setName","surname","setSurname","age","setAge","isCanPost","setIsCanPost","isCanWrite","setIsCanWrite","isReported","setIsReported","setInfoModal","redirect","search","split","dispatch","useDispatch","profileInfo","user","Object","keys","length","getProfileInfo","type","GETPROFILE_INFO_RESET","canComment","canPost","useFormik","initialValues","enableReinitialize","validationSchema","Yup","min","max","required","matches","onSubmit","data","changeProfileInfo","setSubmitting","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","Label","placeholder","onBlur","disabled","password","confirmPassword","test","this","parent","actions","profilePassword","resetForm","props","Check","id","label","defaultChecked","haveReport","profileDelete","logout","push"],"mappings":"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","file":"static/js/9.10e3c91c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport '../styles/Loader.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-overlow\">\r\n      <Spinner\r\n        animation=\"border\"\r\n        role=\"status\"\r\n        style={{\r\n          position: 'absolute',\r\n          width: '100px',\r\n          height: '100px',\r\n          margin: 'auto',\r\n          display: 'block',\r\n        }}\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n// debugger;\r\n\r\nconst Message = ({ variant, children }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // setTimeout(() => {\r\n    //   closeAlert();\r\n    // }, 3000);\r\n  });\r\n\r\n  const closeAlert = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <Alert\r\n      show={show}\r\n      variant={variant}\r\n      children={children}\r\n      onClose={() => closeAlert()}\r\n      dismissible\r\n    >\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport '../styles/LoadAndErrorContainer.scss';\r\n\r\nconst LoadAndErrorContainer = ({\r\n  children,\r\n  loading,\r\n  title,\r\n  setShowModal,\r\n  activeBtn,\r\n  filter,\r\n}) => {\r\n  const { message } = useSelector((state) => state.successMsg);\r\n  const { error } = useSelector((state) => state.errorMsg);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"panel-back\">\r\n        <Container>\r\n          {!activeBtn && (\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">\r\n              Go back\r\n            </Link>\r\n          )}\r\n\r\n          <span>{title}</span>\r\n          {filter && (\r\n            <i\r\n              className=\"fas fa-filter btn__filter\"\r\n              onClick={() => setShowModal(true)}\r\n            ></i>\r\n          )}\r\n        </Container>\r\n      </div>\r\n      {loading && <Loader />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"success\">{message}</Message>}\r\n      <Row>{children}</Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadAndErrorContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport '../styles/ConfirmModal.scss';\r\n\r\nconst ConfirmModal = ({\r\n  showModal,\r\n  setShowModal,\r\n  infoModal,\r\n  executeInMenuItem,\r\n}) => {\r\n  const [comment, setComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    setComment(infoModal.body);\r\n  }, [showModal, infoModal.body]);\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={handleClose} keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{infoModal.header}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {infoModal.position === (0 || 2) ? (\r\n          infoModal.body\r\n        ) : (\r\n          <Form.Group controlId=\"messageFooter\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              defaultValue={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => executeInMenuItem(infoModal.position, comment)}\r\n        >\r\n          {infoModal.footer}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useFormik, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport LoadAndErrorContainer from '../containers/LoadAndErrorContainer';\r\nimport ConfirmModal from '../Modal/ConfirmModal';\r\nimport {\r\n  getProfileInfo,\r\n  changeProfileInfo,\r\n  profilePassword,\r\n  profileDelete,\r\n  logout,\r\n} from '../actions/userActions';\r\nimport { GETPROFILE_INFO_RESET } from '../constants/userConstants';\r\nimport '../styles/ProfileScreen.scss';\r\n\r\nconst ProfileScreen = ({ history, location }) => {\r\n  const [name, setName] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [age, setAge] = useState(18);\r\n  const [isCanPost, setIsCanPost] = useState(true);\r\n  const [isCanWrite, setIsCanWrite] = useState(true);\r\n  const [isReported, setIsReported] = useState(false);\r\n  let [showModal, setShowModal] = useState(false);\r\n  let [infoModal, setInfoModal] = useState({\r\n    header: '',\r\n    body: '',\r\n    footer: '',\r\n  });\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, user } = useSelector((state) => state.profileInfo);\r\n\r\n  useEffect(() => {\r\n    if (!user || Object.keys(user).length === 0) {\r\n      dispatch(getProfileInfo());\r\n    } else {\r\n      setName(user.name);\r\n      setSurname(user.surname);\r\n      setAge(user.age);\r\n      setIsCanPost(user.isCanPost);\r\n      setIsCanWrite(user.isCanWrite);\r\n      setIsReported(user.isReported);\r\n    }\r\n    return () => {\r\n      user && dispatch({ type: GETPROFILE_INFO_RESET });\r\n    };\r\n  }, [dispatch, user]);\r\n\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    setSubmitting,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  } = useFormik({\r\n    initialValues: {\r\n      name: name,\r\n      surname: surname,\r\n      age: age,\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .min(3, '* Name must be least than 3 characters')\r\n        .max(30, '* Name must be shorter than 30 characters')\r\n        .required('* Name must be required')\r\n        .matches(\r\n          /^([a-zA-Z]{3,30})+$/,\r\n          '* This field cannot contain blankspaces or specific characters'\r\n        ),\r\n      surname: Yup.string().required('Surname must be required'),\r\n      age: Yup.number('* Only number')\r\n        .min(18, '* Age must be minimum 18')\r\n        .max(125, '* Age must be maximum 125')\r\n        .required('* Age must be required'),\r\n    }),\r\n    onSubmit: (data) => {\r\n      const { name, surname, age } = data;\r\n      dispatch(changeProfileInfo({ name, surname, age }));\r\n      setSubmitting(true);\r\n    },\r\n  });\r\n\r\n  const accessToPost = (canPost) => {\r\n    return canPost\r\n      ? 'You can create any post'\r\n      : 'You do not have a permission for create any post';\r\n  };\r\n\r\n  const accessToComment = (canComment) => {\r\n    return canComment\r\n      ? 'You can create any comment'\r\n      : 'You do not have a permission for post any comment';\r\n  };\r\n\r\n  const haveReport = (isReported) => {\r\n    return !isReported\r\n      ? 'You have not been reported'\r\n      : 'You have been reported';\r\n  };\r\n\r\n  const showConfirmModal = () => {\r\n    setShowModal(true);\r\n    setInfoModal({\r\n      position: 2,\r\n      header: 'Warning Account',\r\n      body: 'Do you want delete your account?',\r\n      footer: 'Account',\r\n    });\r\n  };\r\n\r\n  const deleteAccount = () => {\r\n    dispatch(profileDelete());\r\n    dispatch(logout());\r\n    setShowModal(!showModal);\r\n    history.push(redirect);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoadAndErrorContainer loading={loading} title=\"Your profile\">\r\n        <div className=\"profile\">\r\n          <div className=\"profile-info\">\r\n            <h5 className=\"h5-profile\">Profile</h5>\r\n            <Form className=\"form\" onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                ></Form.Control>\r\n                {touched.name && errors.name ? <p>{errors.name}</p> : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"surname\">\r\n                <Form.Label>Surname *</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter surname\"\r\n                  value={values.surname}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                ></Form.Control>\r\n                {touched.surname && errors.surname ? (\r\n                  <p>{errors.surname}</p>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"age\">\r\n                <Form.Label>Age *</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter age\"\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                ></Form.Control>\r\n                {touched.age && errors.age ? <p>{errors.age}</p> : null}\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\" variant=\"primary\" disabled={!isValid}>\r\n                EDIT INFO\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          <div className=\"profile-password\">\r\n            <h5 className=\"h5-password\">Password</h5>\r\n            <Formik\r\n              initialValues={{ password: '', confirmPassword: '' }}\r\n              validationSchema={Yup.object({\r\n                password: Yup.string()\r\n                  .min(4, '* Password must be least than 3 characters')\r\n                  .max(100, '* Password must be shorter than 100 characters')\r\n                  .required('* Password must be required'),\r\n                confirmPassword: Yup.string().test(\r\n                  'passwords-match',\r\n                  'Passwords must match',\r\n                  function (value) {\r\n                    return this.parent.password === value;\r\n                  }\r\n                ),\r\n              })}\r\n              onSubmit={(values, actions) => {\r\n                dispatch(profilePassword({ password: values.password }));\r\n                actions.setSubmitting(true);\r\n                actions.resetForm();\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <Form onSubmit={props.handleSubmit}>\r\n                  <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password *</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      value={props.values.password}\r\n                      onChange={props.handleChange}\r\n                      onBlur={props.handleBlur}\r\n                      name=\"password\"\r\n                    ></Form.Control>\r\n                    {props.touched.password && props.errors.password ? (\r\n                      <p>{props.errors.password}</p>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Confirm Password *</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm password\"\r\n                      value={props.values.confirmPassword}\r\n                      onChange={props.handleChange}\r\n                      onBlur={props.handleBlur}\r\n                      name=\"confirmPassword\"\r\n                    ></Form.Control>\r\n                    {props.touched.confirmPassword &&\r\n                    props.errors.confirmPassword ? (\r\n                      <p>{props.errors.confirmPassword}</p>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    disabled={!props.isValid}\r\n                  >\r\n                    EDIT PASSWORD\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"profile-status\">\r\n            <h5 className=\"h5-status\">Status</h5>\r\n\r\n            <Form.Check\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              label={accessToPost(isCanPost)}\r\n              disabled\r\n              isValid={isCanPost}\r\n              defaultChecked={isCanPost}\r\n            />\r\n\r\n            <Form.Check\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              label={accessToComment(isCanWrite)}\r\n              disabled\r\n              isValid={isCanWrite}\r\n              defaultChecked={isCanWrite}\r\n            />\r\n\r\n            <Form.Check\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              label={haveReport(isReported)}\r\n              disabled\r\n              isValid={isReported}\r\n              defaultChecked={isReported}\r\n            />\r\n\r\n            <Button variant=\"danger\" onClick={showConfirmModal}>\r\n              Delete your account\r\n            </Button>\r\n\r\n            <ConfirmModal\r\n              showModal={showModal}\r\n              setShowModal={setShowModal}\r\n              infoModal={infoModal}\r\n              executeInMenuItem={deleteAccount}\r\n            />\r\n          </div>\r\n        </div>\r\n      </LoadAndErrorContainer>\r\n    </>\r\n  );\r\n};\r\nexport default ProfileScreen;\r\n"],"sourceRoot":""}